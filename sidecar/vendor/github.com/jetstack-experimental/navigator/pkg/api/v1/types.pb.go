// Code generated by protoc-gen-go.
// source: pkg/api/v1/types.proto
// DO NOT EDIT!

/*
Package v1 is a generated protocol buffer package.

It is generated from these files:
	pkg/api/v1/types.proto

It has these top-level messages:
	ElasticsearchClusterSpec
	ElasticsearchClusterPlugin
	ElasticsearchClusterNodePool
	ElasticsearchImage
	ElasticsearchOwnerReference
	ElasticsearchClusterResources
	ElasticsearchClusterPersistenceConfig
*/
package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ElasticsearchClusterSpec struct {
	Version   string                          `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
	Plugins   []*ElasticsearchClusterPlugin   `protobuf:"bytes,2,rep,name=plugins" json:"plugins,omitempty"`
	NodePools []*ElasticsearchClusterNodePool `protobuf:"bytes,3,rep,name=nodePools" json:"nodePools,omitempty"`
	Image     *ElasticsearchImage             `protobuf:"bytes,4,opt,name=image" json:"image,omitempty"`
	Sysctl    []string                        `protobuf:"bytes,5,rep,name=sysctl" json:"sysctl,omitempty"`
}

func (m *ElasticsearchClusterSpec) Reset()                    { *m = ElasticsearchClusterSpec{} }
func (m *ElasticsearchClusterSpec) String() string            { return proto.CompactTextString(m) }
func (*ElasticsearchClusterSpec) ProtoMessage()               {}
func (*ElasticsearchClusterSpec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ElasticsearchClusterSpec) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ElasticsearchClusterSpec) GetPlugins() []*ElasticsearchClusterPlugin {
	if m != nil {
		return m.Plugins
	}
	return nil
}

func (m *ElasticsearchClusterSpec) GetNodePools() []*ElasticsearchClusterNodePool {
	if m != nil {
		return m.NodePools
	}
	return nil
}

func (m *ElasticsearchClusterSpec) GetImage() *ElasticsearchImage {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *ElasticsearchClusterSpec) GetSysctl() []string {
	if m != nil {
		return m.Sysctl
	}
	return nil
}

type ElasticsearchClusterPlugin struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *ElasticsearchClusterPlugin) Reset()                    { *m = ElasticsearchClusterPlugin{} }
func (m *ElasticsearchClusterPlugin) String() string            { return proto.CompactTextString(m) }
func (*ElasticsearchClusterPlugin) ProtoMessage()               {}
func (*ElasticsearchClusterPlugin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ElasticsearchClusterPlugin) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ElasticsearchClusterNodePool struct {
	Name            string                                                        `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Replicas        int32                                                         `protobuf:"varint,2,opt,name=replicas" json:"replicas,omitempty"`
	Roles           []string                                                      `protobuf:"bytes,3,rep,name=roles" json:"roles,omitempty"`
	Resources       *ElasticsearchClusterResources                                `protobuf:"bytes,4,opt,name=resources" json:"resources,omitempty"`
	State           *ElasticsearchClusterNodePool_ElasticsearchClusterStateConfig `protobuf:"bytes,5,opt,name=state" json:"state,omitempty"`
	OwnerReferences []*ElasticsearchOwnerReference                                `protobuf:"bytes,6,rep,name=ownerReferences" json:"ownerReferences,omitempty"`
}

func (m *ElasticsearchClusterNodePool) Reset()                    { *m = ElasticsearchClusterNodePool{} }
func (m *ElasticsearchClusterNodePool) String() string            { return proto.CompactTextString(m) }
func (*ElasticsearchClusterNodePool) ProtoMessage()               {}
func (*ElasticsearchClusterNodePool) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ElasticsearchClusterNodePool) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ElasticsearchClusterNodePool) GetReplicas() int32 {
	if m != nil {
		return m.Replicas
	}
	return 0
}

func (m *ElasticsearchClusterNodePool) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *ElasticsearchClusterNodePool) GetResources() *ElasticsearchClusterResources {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *ElasticsearchClusterNodePool) GetState() *ElasticsearchClusterNodePool_ElasticsearchClusterStateConfig {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *ElasticsearchClusterNodePool) GetOwnerReferences() []*ElasticsearchOwnerReference {
	if m != nil {
		return m.OwnerReferences
	}
	return nil
}

type ElasticsearchClusterNodePool_ElasticsearchClusterStateConfig struct {
	Stateful    bool                                   `protobuf:"varint,1,opt,name=stateful" json:"stateful,omitempty"`
	Persistence *ElasticsearchClusterPersistenceConfig `protobuf:"bytes,2,opt,name=persistence" json:"persistence,omitempty"`
}

func (m *ElasticsearchClusterNodePool_ElasticsearchClusterStateConfig) Reset() {
	*m = ElasticsearchClusterNodePool_ElasticsearchClusterStateConfig{}
}
func (m *ElasticsearchClusterNodePool_ElasticsearchClusterStateConfig) String() string {
	return proto.CompactTextString(m)
}
func (*ElasticsearchClusterNodePool_ElasticsearchClusterStateConfig) ProtoMessage() {}
func (*ElasticsearchClusterNodePool_ElasticsearchClusterStateConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2, 0}
}

func (m *ElasticsearchClusterNodePool_ElasticsearchClusterStateConfig) GetStateful() bool {
	if m != nil {
		return m.Stateful
	}
	return false
}

func (m *ElasticsearchClusterNodePool_ElasticsearchClusterStateConfig) GetPersistence() *ElasticsearchClusterPersistenceConfig {
	if m != nil {
		return m.Persistence
	}
	return nil
}

type ElasticsearchImage struct {
	Repository string `protobuf:"bytes,1,opt,name=repository" json:"repository,omitempty"`
	Tag        string `protobuf:"bytes,2,opt,name=tag" json:"tag,omitempty"`
	PullPolicy string `protobuf:"bytes,3,opt,name=pullPolicy" json:"pullPolicy,omitempty"`
	FsGroup    int64  `protobuf:"varint,4,opt,name=fsGroup" json:"fsGroup,omitempty"`
}

func (m *ElasticsearchImage) Reset()                    { *m = ElasticsearchImage{} }
func (m *ElasticsearchImage) String() string            { return proto.CompactTextString(m) }
func (*ElasticsearchImage) ProtoMessage()               {}
func (*ElasticsearchImage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ElasticsearchImage) GetRepository() string {
	if m != nil {
		return m.Repository
	}
	return ""
}

func (m *ElasticsearchImage) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *ElasticsearchImage) GetPullPolicy() string {
	if m != nil {
		return m.PullPolicy
	}
	return ""
}

func (m *ElasticsearchImage) GetFsGroup() int64 {
	if m != nil {
		return m.FsGroup
	}
	return 0
}

type ElasticsearchOwnerReference struct {
	ApiVersion string `protobuf:"bytes,1,opt,name=apiVersion" json:"apiVersion,omitempty"`
	Controller string `protobuf:"bytes,2,opt,name=controller" json:"controller,omitempty"`
	Kind       string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	Name       string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Uid        string `protobuf:"bytes,5,opt,name=uid" json:"uid,omitempty"`
}

func (m *ElasticsearchOwnerReference) Reset()                    { *m = ElasticsearchOwnerReference{} }
func (m *ElasticsearchOwnerReference) String() string            { return proto.CompactTextString(m) }
func (*ElasticsearchOwnerReference) ProtoMessage()               {}
func (*ElasticsearchOwnerReference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ElasticsearchOwnerReference) GetApiVersion() string {
	if m != nil {
		return m.ApiVersion
	}
	return ""
}

func (m *ElasticsearchOwnerReference) GetController() string {
	if m != nil {
		return m.Controller
	}
	return ""
}

func (m *ElasticsearchOwnerReference) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *ElasticsearchOwnerReference) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ElasticsearchOwnerReference) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type ElasticsearchClusterResources struct {
	Requests *ElasticsearchClusterResources_ResourceSet `protobuf:"bytes,1,opt,name=requests" json:"requests,omitempty"`
	Limits   *ElasticsearchClusterResources_ResourceSet `protobuf:"bytes,2,opt,name=limits" json:"limits,omitempty"`
}

func (m *ElasticsearchClusterResources) Reset()                    { *m = ElasticsearchClusterResources{} }
func (m *ElasticsearchClusterResources) String() string            { return proto.CompactTextString(m) }
func (*ElasticsearchClusterResources) ProtoMessage()               {}
func (*ElasticsearchClusterResources) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ElasticsearchClusterResources) GetRequests() *ElasticsearchClusterResources_ResourceSet {
	if m != nil {
		return m.Requests
	}
	return nil
}

func (m *ElasticsearchClusterResources) GetLimits() *ElasticsearchClusterResources_ResourceSet {
	if m != nil {
		return m.Limits
	}
	return nil
}

type ElasticsearchClusterResources_ResourceSet struct {
	Cpu    string `protobuf:"bytes,1,opt,name=cpu" json:"cpu,omitempty"`
	Memory string `protobuf:"bytes,2,opt,name=memory" json:"memory,omitempty"`
}

func (m *ElasticsearchClusterResources_ResourceSet) Reset() {
	*m = ElasticsearchClusterResources_ResourceSet{}
}
func (m *ElasticsearchClusterResources_ResourceSet) String() string { return proto.CompactTextString(m) }
func (*ElasticsearchClusterResources_ResourceSet) ProtoMessage()    {}
func (*ElasticsearchClusterResources_ResourceSet) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5, 0}
}

func (m *ElasticsearchClusterResources_ResourceSet) GetCpu() string {
	if m != nil {
		return m.Cpu
	}
	return ""
}

func (m *ElasticsearchClusterResources_ResourceSet) GetMemory() string {
	if m != nil {
		return m.Memory
	}
	return ""
}

type ElasticsearchClusterPersistenceConfig struct {
	Enabled      bool   `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	Size         string `protobuf:"bytes,2,opt,name=size" json:"size,omitempty"`
	StorageClass string `protobuf:"bytes,3,opt,name=storageClass" json:"storageClass,omitempty"`
}

func (m *ElasticsearchClusterPersistenceConfig) Reset()         { *m = ElasticsearchClusterPersistenceConfig{} }
func (m *ElasticsearchClusterPersistenceConfig) String() string { return proto.CompactTextString(m) }
func (*ElasticsearchClusterPersistenceConfig) ProtoMessage()    {}
func (*ElasticsearchClusterPersistenceConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{6}
}

func (m *ElasticsearchClusterPersistenceConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *ElasticsearchClusterPersistenceConfig) GetSize() string {
	if m != nil {
		return m.Size
	}
	return ""
}

func (m *ElasticsearchClusterPersistenceConfig) GetStorageClass() string {
	if m != nil {
		return m.StorageClass
	}
	return ""
}

func init() {
	proto.RegisterType((*ElasticsearchClusterSpec)(nil), "v1.ElasticsearchClusterSpec")
	proto.RegisterType((*ElasticsearchClusterPlugin)(nil), "v1.ElasticsearchClusterPlugin")
	proto.RegisterType((*ElasticsearchClusterNodePool)(nil), "v1.ElasticsearchClusterNodePool")
	proto.RegisterType((*ElasticsearchClusterNodePool_ElasticsearchClusterStateConfig)(nil), "v1.ElasticsearchClusterNodePool.ElasticsearchClusterStateConfig")
	proto.RegisterType((*ElasticsearchImage)(nil), "v1.ElasticsearchImage")
	proto.RegisterType((*ElasticsearchOwnerReference)(nil), "v1.ElasticsearchOwnerReference")
	proto.RegisterType((*ElasticsearchClusterResources)(nil), "v1.ElasticsearchClusterResources")
	proto.RegisterType((*ElasticsearchClusterResources_ResourceSet)(nil), "v1.ElasticsearchClusterResources.ResourceSet")
	proto.RegisterType((*ElasticsearchClusterPersistenceConfig)(nil), "v1.ElasticsearchClusterPersistenceConfig")
}

func init() { proto.RegisterFile("pkg/api/v1/types.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 604 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xcd, 0x6e, 0x13, 0x31,
	0x10, 0xd6, 0x76, 0x9b, 0xb4, 0x3b, 0x41, 0xa2, 0xb2, 0x50, 0xb5, 0x0a, 0xd0, 0x86, 0x95, 0x90,
	0x82, 0x04, 0x29, 0x0d, 0x07, 0x38, 0x01, 0x52, 0x55, 0xa1, 0x0a, 0x09, 0x2a, 0x57, 0xea, 0xdd,
	0xdd, 0x4c, 0x82, 0x55, 0x67, 0x6d, 0x6c, 0x6f, 0x50, 0x38, 0x71, 0xe6, 0x05, 0x78, 0x32, 0x5e,
	0x82, 0x33, 0x0f, 0x80, 0xec, 0xf5, 0x26, 0x5b, 0xda, 0x34, 0x70, 0x9b, 0x19, 0xcf, 0x37, 0x3f,
	0xdf, 0x7c, 0xbb, 0xb0, 0xab, 0x2e, 0x27, 0x07, 0x4c, 0xf1, 0x83, 0xd9, 0xe1, 0x81, 0x9d, 0x2b,
	0x34, 0x03, 0xa5, 0xa5, 0x95, 0x64, 0x63, 0x76, 0x98, 0xfd, 0x8e, 0x20, 0x3d, 0x16, 0xcc, 0x58,
	0x9e, 0x1b, 0x64, 0x3a, 0xff, 0x74, 0x24, 0x4a, 0x63, 0x51, 0x9f, 0x29, 0xcc, 0x49, 0x0a, 0x5b,
	0x33, 0xd4, 0x86, 0xcb, 0x22, 0x8d, 0x7a, 0x51, 0x3f, 0xa1, 0xb5, 0x4b, 0x5e, 0xc1, 0x96, 0x12,
	0xe5, 0x84, 0x17, 0x26, 0xdd, 0xe8, 0xc5, 0xfd, 0xce, 0x70, 0x6f, 0x30, 0x3b, 0x1c, 0xdc, 0x54,
	0xe8, 0xd4, 0xa7, 0xd1, 0x3a, 0x9d, 0xbc, 0x86, 0xa4, 0x90, 0x23, 0x3c, 0x95, 0x52, 0x98, 0x34,
	0xf6, 0xd8, 0xde, 0x2a, 0xec, 0x87, 0x90, 0x48, 0x97, 0x10, 0xf2, 0x14, 0x5a, 0x7c, 0xca, 0x26,
	0x98, 0x6e, 0xf6, 0xa2, 0x7e, 0x67, 0xb8, 0x7b, 0x0d, 0x7b, 0xe2, 0x5e, 0x69, 0x95, 0x44, 0x76,
	0xa1, 0x6d, 0xe6, 0x26, 0xb7, 0x22, 0x6d, 0xf5, 0xe2, 0x7e, 0x42, 0x83, 0x97, 0x3d, 0x87, 0xee,
	0xea, 0x61, 0x09, 0x81, 0xcd, 0x82, 0x4d, 0x31, 0x2c, 0xed, 0xed, 0xec, 0x67, 0x0c, 0x0f, 0x6e,
	0x9b, 0xf1, 0x26, 0x10, 0xe9, 0xc2, 0xb6, 0x46, 0x25, 0x78, 0xce, 0x1c, 0x4f, 0x51, 0xbf, 0x45,
	0x17, 0x3e, 0xb9, 0x07, 0x2d, 0x2d, 0x05, 0x56, 0x24, 0x24, 0xb4, 0x72, 0xc8, 0x1b, 0x48, 0x34,
	0x1a, 0x59, 0xea, 0x1c, 0x4d, 0x58, 0xf1, 0xd1, 0x2a, 0x7a, 0x68, 0x9d, 0x48, 0x97, 0x18, 0x72,
	0x0e, 0x2d, 0x63, 0x99, 0xc5, 0xb4, 0xe5, 0xc1, 0x6f, 0xd7, 0x71, 0x7b, 0xe3, 0xe3, 0x99, 0xab,
	0x70, 0x24, 0x8b, 0x31, 0x9f, 0xd0, 0xaa, 0x1c, 0x39, 0x81, 0xbb, 0xf2, 0x4b, 0xe1, 0x9a, 0x8e,
	0x51, 0x63, 0xe1, 0xc6, 0x6b, 0xfb, 0xeb, 0xed, 0x5f, 0xeb, 0xf0, 0xf1, 0x4a, 0x1e, 0xfd, 0x1b,
	0xd7, 0xfd, 0x1e, 0xc1, 0xfe, 0x9a, 0xae, 0x8e, 0x39, 0xdf, 0x77, 0x5c, 0x0a, 0xcf, 0xe8, 0x36,
	0x5d, 0xf8, 0xe4, 0x3d, 0x74, 0x94, 0xd3, 0xa1, 0xb1, 0xae, 0x9e, 0x27, 0xb6, 0x33, 0x7c, 0xb2,
	0x52, 0x80, 0xcb, 0xd4, 0xb0, 0x51, 0x13, 0x9d, 0x7d, 0x8b, 0x80, 0x5c, 0xd7, 0x0f, 0xd9, 0x03,
	0xd0, 0xa8, 0xa4, 0xe1, 0x56, 0xea, 0x79, 0xb8, 0x69, 0x23, 0x42, 0x76, 0x20, 0xb6, 0x6c, 0xe2,
	0x7b, 0x27, 0xd4, 0x99, 0x0e, 0xa1, 0x4a, 0x21, 0x4e, 0xa5, 0xe0, 0xf9, 0x3c, 0x8d, 0x2b, 0xc4,
	0x32, 0xe2, 0x3e, 0xa6, 0xb1, 0x79, 0xa7, 0x65, 0xa9, 0xfc, 0x5d, 0x63, 0x5a, 0xbb, 0xd9, 0x8f,
	0x08, 0xee, 0xdf, 0x42, 0xa0, 0xab, 0xcc, 0x14, 0x3f, 0xbf, 0xf2, 0x25, 0x36, 0x22, 0xee, 0x3d,
	0x97, 0x85, 0xd5, 0x52, 0x08, 0xd4, 0x61, 0xa4, 0x46, 0xc4, 0x29, 0xf3, 0x92, 0x17, 0xa3, 0x30,
	0x93, 0xb7, 0x17, 0x6a, 0xdd, 0x6c, 0xa8, 0x75, 0x07, 0xe2, 0x92, 0x8f, 0xbc, 0x70, 0x12, 0xea,
	0xcc, 0xec, 0x57, 0x04, 0x0f, 0x6f, 0x55, 0x1e, 0x39, 0x71, 0x0a, 0xff, 0x5c, 0xa2, 0xb1, 0xc6,
	0x4f, 0xd6, 0x19, 0x3e, 0x5b, 0x2b, 0xd7, 0x41, 0x6d, 0x9d, 0xa1, 0xa5, 0x0b, 0x38, 0x39, 0x86,
	0xb6, 0xe0, 0x53, 0x6e, 0x4d, 0xb8, 0xe8, 0x7f, 0x16, 0x0a, 0xe0, 0xee, 0x4b, 0xe8, 0x34, 0xc2,
	0x6e, 0xa9, 0x5c, 0x95, 0x81, 0x35, 0x67, 0xba, 0x7f, 0xc2, 0x14, 0xa7, 0xee, 0xac, 0x15, 0x55,
	0xc1, 0xcb, 0xe6, 0xf0, 0xf8, 0x9f, 0xf4, 0xe3, 0x2e, 0x89, 0x05, 0xbb, 0x10, 0x38, 0x0a, 0xd2,
	0xac, 0x5d, 0xc7, 0xaa, 0xe1, 0x5f, 0x31, 0x14, 0xf6, 0x36, 0xc9, 0xe0, 0x8e, 0xb1, 0x52, 0xb3,
	0x09, 0x1e, 0x09, 0x66, 0x4c, 0xb8, 0xc2, 0x95, 0xd8, 0x45, 0xdb, 0xff, 0x90, 0x5f, 0xfc, 0x09,
	0x00, 0x00, 0xff, 0xff, 0x91, 0x37, 0xeb, 0x33, 0xaa, 0x05, 0x00, 0x00,
}
