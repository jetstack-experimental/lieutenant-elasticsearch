variables:
  DOCKER_DRIVER: overlay
  PKG_PATH: github.com/jetstack-experimental/pilot-elasticsearch

stages:
- build
- docker
- deploy

# configure $GOPATH correctly on all build stages
before_script:
  - mkdir -p "$GOPATH/src/$PKG_PATH" && rmdir "$GOPATH/src/$PKG_PATH"
  - ln -s "$(pwd)" "$GOPATH/src/$PKG_PATH"
  - cd "$GOPATH/src/$PKG_PATH"

test:helm:
  image: alpine:3.5
  stage: build
  tags:
  - docker
  script:
  # Grab helm
  - apk add --no-cache openssl make
  - HELM_URL=https://storage.googleapis.com/kubernetes-helm
  - HELM_TARBALL=helm-canary-linux-amd64.tar.gz
  - wget -q ${HELM_URL}/${HELM_TARBALL}
  - tar xzfv ${HELM_TARBALL}
  - PATH=`pwd`/linux-amd64/:$PATH make test_helm

test:golang:
  image: golang:1.8
  stage: build
  tags:
  - docker
  script:
  - make test_golang

vet:golang:
  image: golang:1.8
  stage: build
  tags:
  - docker
  script:
  - make vet_golang

fmt:golang:
  image: golang:1.8
  stage: build
  tags:
  - docker
  script:
  - make fmt_golang

build:golang:
  image: golang:1.8
  stage: build
  tags:
  - docker
  script:
  - make build
  artifacts:
    paths:
    - sidecar/sidecar_linux_amd64

docker:image:
  image: docker:latest
  stage: docker
  tags:
  - docker
  script:
  - apk add --no-cache
      make
  - mkdir -p ~/.docker && echo "${DOCKER_AUTH_CONFIG}" > ~/.docker/config.json && chmod 600 ~/.docker/config.json
  - make docker_build docker_push IMAGE_TAGS="${CI_BUILD_REF_SLUG}-${CI_PIPELINE_ID} latest"
  only:
  - master
  services:
  - docker:dind
  dependencies:
  - build:golang
