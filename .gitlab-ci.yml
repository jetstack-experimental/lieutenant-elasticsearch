variables:
  DOCKER_DRIVER: overlay
  REGISTRY_HOST: eu.gcr.io
  REGISTRY_GROUP: jetstack-sandbox

stages:
- build
- docker
- deploy

# configure $GOPATH correctly on all build stages
before_script:
  - mkdir -p "$GOPATH/src/gitlab.jetstack.net/$CI_PROJECT_NAMESPACE"
  - ln -s "$(pwd)" "$GOPATH/src/gitlab.jetstack.net/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME"
  - cd "$GOPATH/src/gitlab.jetstack.net/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME"

test:helm:
  image: eu.gcr.io/jetstack-gke/infrastructure:latest
  stage: build
  tags:
  - docker
  script:
  - make test_helm

test:golang:
  image: golang:1.8
  stage: build
  tags:
  - docker
  script:
  - make test_golang

vet:golang:
  image: golang:1.8
  stage: build
  tags:
  - docker
  script:
  - make vet_golang

fmt:golang:
  image: golang:1.8
  stage: build
  tags:
  - docker
  script:
  - make fmt_golang

build:golang:
  image: golang:1.8
  stage: build
  tags:
  - docker
  script:
  - make build
  artifacts:
    paths:
    - sidecar/sidecar_linux_amd64

docker:image:
  image: docker:latest
  stage: docker
  tags:
  - docker
  script:
  - apk add --no-cache
      make
  - docker login -u _json_key -p "$(echo "${GCLOUD_SVC_ACCT}" | base64 -d)" "https://${REGISTRY_HOST}"
  - make docker_build docker_push REGISTRY="${REGISTRY_HOST}/${REGISTRY_GROUP}" IMAGE_TAGS="${CI_BUILD_REF_SLUG}-${CI_PIPELINE_ID} latest"
  only:
  - master
  services:
  - docker:dind
  dependencies:
  - build:golang
